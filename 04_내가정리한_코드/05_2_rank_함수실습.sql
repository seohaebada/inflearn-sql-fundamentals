/* 0. 강의 SQL */

-- RANK, DENSE_RANK, ROW_NUMBER 사용하기 - 1
SELECT A.EMPNO, ENAME, JOB, SAL
     , RANK() OVER(ORDER BY SAL DESC) AS RANK
	, DENSE_RANK() OVER(ORDER BY SAL DESC) AS DENSE_RANK
	, ROW_NUMBER() OVER (ORDER BY SAL DESC) AS ROW_NUMBER
FROM HR.EMP A;

-- RANK, DENSE_RANK, ROW_NUMBER 사용하기 - 2
SELECT A.EMPNO, ENAME, JOB, DEPTNO, SAL
     , RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) AS RANK
	, DENSE_RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) AS DENSE_RANK
	, ROW_NUMBER() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS ROW_NUMBER
FROM HR.EMP A

/* 1. 순위 함수 실습 */

-- 회사내 근무 기간 순위(HIREDATE) : 공동 순위가 있을 경우 차순위는 밀려서 순위 정함
SELECT A.*
     , RANK() OVER (ORDER BY HIREDATE) AS HIRE_RANK
FROM HR.EMP A;

-- 부서별로 가장 급여가 높은/낮은 순으로 순위: 공동 순위 시 차순위는 밀리지 않음.
SELECT A.*
     , DENSE_RANK() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS SAL_RANK_DESC
	, DENSE_RANK() OVER (PARTITION BY DEPTNO ORDER BY SAL ) AS SAL_RANK_ASC
FROM HR.EMP A;

-- 부서별 가장 급여가 높은 직원 정보:  공동 순위는 없으며 반드시 고유 순위를 정함.
SELECT *
FROM
    (
        SELECT A.*
             , ROW_NUMBER() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS SAL_RN
        FROM HR.EMP A
    ) A WHERE SAL_RN = 1;

-- 부서별 급여 TOP 2 직원 정보: 공동 순위는 없으며 반드시 고유 순위를 정함.
SELECT *
FROM
    (
        SELECT A.*
             , ROW_NUMBER() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS SAL_RN
        FROM HR.EMP A
    ) A WHERE SAL_RN <=2;

-- 부서별 가장 급여가 높은 직원과 가장 급여가 낮은 직원 정보. 공동 순위는 없으며 반드시 고유 순위를 정함
SELECT A.*
     , CASE WHEN SAL_RN_DESC=1 THEN 'TOP'
            WHEN SAL_RN_ASC=1 THEN 'BOTTOM'
            ELSE 'MIDDLE' END AS GUBUN
FROM (
         SELECT A.*
              , ROW_NUMBER() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS SAL_RN_DESC
		, ROW_NUMBER() OVER (PARTITION BY DEPTNO ORDER BY SAL ASC) AS SAL_RN_ASC
         FROM HR.EMP A
     ) A WHERE SAL_RN_DESC = 1 OR SAL_RN_ASC=1;


-- 부서별 가장 급여가 높은 직원과 가장 급여가 낮은 직원 정보 그리고 두 직원값의 급여차이도 함께 추출. 공동 순위는 없으며 반드시 고유 순위를 정함
WITH
    TEMP_01 AS (
        SELECT A.*
             , CASE WHEN SAL_RN_DESC=1 THEN 'TOP'
                    WHEN SAL_RN_ASC=1 THEN 'BOTTOM'
                    ELSE 'MIDDLE' END AS GUBUN
        FROM (
                 SELECT A.*
                      , ROW_NUMBER() OVER (PARTITION BY DEPTNO ORDER BY SAL DESC) AS SAL_RN_DESC
			, ROW_NUMBER() OVER (PARTITION BY DEPTNO ORDER BY SAL ASC) AS SAL_RN_ASC
                 FROM HR.EMP A
             ) A WHERE SAL_RN_DESC = 1 OR SAL_RN_ASC=1
    ),
    TEMP_02 AS (
        SELECT DEPTNO
             , MAX(SAL) AS MAX_SAL, MIN(SAL) AS MIN_SAL
        FROM TEMP_01 GROUP BY DEPTNO
    )
SELECT A.*, B.MAX_SAL - B.MIN_SAL AS DIFF_SAL
FROM TEMP_01 A
         JOIN TEMP_02 B ON A.DEPTNO = B.DEPTNO
ORDER BY A.DEPTNO, A.SAL DESC;

-- 회사내 커미션 높은 순위. RANK와 ROW_NUMBER 모두 추출.
SELECT A.*
     , RANK() OVER (ORDER BY COMM DESC) AS COMM_RANK
	, ROW_NUMBER() OVER (ORDER BY COMM DESC) AS COMM_RNUM
FROM HR.EMP A;

/* 2. 순위 함수에서 NULL 처리 실습 */

-- NULL을 가장 선두 순위로 처리
SELECT A.*
     , RANK() OVER (ORDER BY COMM DESC NULLS FIRST ) AS COMM_RANK
	, ROW_NUMBER() OVER (ORDER BY COMM DESC NULLS FIRST) AS COMM_RNUM
FROM HR.EMP A;

-- NULL을 가장 마지막 순위로 처리
SELECT A.*
     , RANK() OVER (ORDER BY COMM DESC NULLS LAST ) AS COMM_RANK
	, ROW_NUMBER() OVER (ORDER BY COMM DESC NULLS LAST) AS COMM_RNUM
FROM HR.EMP A;

-- NULL을 전처리하여 순위 정함.
SELECT A.*
     , RANK() OVER (ORDER BY COALESCE(COMM, 0) DESC ) AS COMM_RANK
	, ROW_NUMBER() OVER (ORDER BY COALESCE(COMM, 0) DESC) AS COMM_RNUM
FROM HR.EMP A;
