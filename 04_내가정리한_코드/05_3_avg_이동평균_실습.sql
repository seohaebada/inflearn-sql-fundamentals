-- 3일 이동 평균 매출
WITH
    TEMP_01 AS (
        SELECT DATE_TRUNC('DAY', B.ORDER_DATE)::DATE AS ORD_DATE, SUM(AMOUNT) AS DAILY_SUM
        FROM ORDER_ITEMS A
                 JOIN ORDERS B ON A.ORDER_ID = B.ORDER_ID
        GROUP BY DATE_TRUNC('DAY', B.ORDER_DATE)::DATE
    )
SELECT ORD_DATE, DAILY_SUM
     , AVG(DAILY_SUM) OVER (ORDER BY ORD_DATE
	                              ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MA_3DAYS
FROM TEMP_01;

-- 3일 중앙 평균 매출
WITH
    TEMP_01 AS (
        SELECT DATE_TRUNC('DAY', B.ORDER_DATE)::DATE AS ORD_DATE, SUM(AMOUNT) AS DAILY_SUM
        FROM ORDER_ITEMS A
                 JOIN ORDERS B ON A.ORDER_ID = B.ORDER_ID
        GROUP BY DATE_TRUNC('DAY', B.ORDER_DATE)::DATE
    )
SELECT ORD_DATE, DAILY_SUM
     , AVG(DAILY_SUM) OVER (ORDER BY ORD_DATE
	                              ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS CA_3DAYS
FROM TEMP_01;

-- N 이동 평균에서 맨 처음 N-1 개의 데이터의 경우 정확히 N이동 평균을 구할 수 없을 때 NULL 처리 하기.
WITH
    TEMP_01 AS (
        SELECT DATE_TRUNC('DAY', B.ORDER_DATE)::DATE AS ORD_DATE, SUM(AMOUNT) AS DAILY_SUM
        FROM ORDER_ITEMS A
                 JOIN ORDERS B ON A.ORDER_ID = B.ORDER_ID
        GROUP BY DATE_TRUNC('DAY', B.ORDER_DATE)::DATE
    )
SELECT ORD_DATE, DAILY_SUM
     , AVG(DAILY_SUM) OVER (ORDER BY ORD_DATE
	                              ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MA_3DAYS_01
	, CASE WHEN  ROW_NUMBER() OVER (ORDER BY ORD_DATE) <= 2 THEN NULL
           ELSE AVG(DAILY_SUM) OVER (ORDER BY ORD_DATE
	                              ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)
    END AS MA_3DAYS_02
FROM TEMP_01;

-- 또는 아래와 같이 작성
WITH
    TEMP_01 AS (
        SELECT DATE_TRUNC('DAY', B.ORDER_DATE)::DATE AS ORD_DATE, SUM(AMOUNT) AS DAILY_SUM
        FROM ORDER_ITEMS A
                 JOIN ORDERS B ON A.ORDER_ID = B.ORDER_ID
        GROUP BY DATE_TRUNC('DAY', B.ORDER_DATE)::DATE
    ),
    TEMP_02 AS (
SELECT ORD_DATE, DAILY_SUM
        , AVG(DAILY_SUM) OVER (ORDER BY ORD_DATE
    ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MA_3DAYS_01
        , ROW_NUMBER() OVER (ORDER BY ORD_DATE) AS RN
FROM TEMP_01
    )
SELECT ORD_DATE, DAILY_SUM
     , MA_3DAYS_01
     , CASE WHEN RN <= 2 THEN NULL
            ELSE MA_3DAYS_01 END AS MA_3DAYS_02
FROM TEMP_02;